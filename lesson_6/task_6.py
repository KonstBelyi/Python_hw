"""
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю.
Помогите ему это сделать.

Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого
человека в строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же,
как у Пети, то он должен встать после них.

( 1. Здесь понадобится сортировка.
Вот пример:
a = [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
print(a)
# [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
a.sort(reverse=True)
print(a)
# [9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Параметр reverse=True отсортирует список в порядке убывания элементов.
2. Так же, понадобится list comprehension который позволит создать список случайных значений)
"""

from random import randint

num_students = int(input('Введите количесвто учеников в классе (до прихода Пети): '))
lst = [randint(150, 201) for _ in range(num_students)]
print('Рост учеников в классе (до прихода Пети): {}'.format(lst))

rost_Peti = int(input('Введите рост Пети: '))
print('Рост Пети: {} cм.'.format(rost_Peti))
lst.append(rost_Peti)
print('Рост учеников в классе (с Петей): {}'.format(lst))
lst.sort(reverse=True)
print('Рост учеников по убыванию: {}'.format(lst))
print('Количество учеников с таким же ростом, как у Пети:', lst.count(rost_Peti))

id1_rostPeti = lst.index(rost_Peti)     # ищем первое вхождение с таким же ростом, как у Пети
# print(id1_rostPeti)
idx_Peti = lst.index(rost_Peti) + lst.count(rost_Peti)        # к первому вхождению прибавляем общее количество учеников с таким же ростом
print('Место Пети в строю (по росту): {} место.'.format(idx_Peti))
